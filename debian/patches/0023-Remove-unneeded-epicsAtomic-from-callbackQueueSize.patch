From: Martin Konrad <konrad@frib.msu.edu>
Date: Tue, 27 Nov 2018 10:45:35 -0500
Subject: Remove unneeded epicsAtomic from callbackQueueSize

---
 src/ioc/db/callback.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/ioc/db/callback.c b/src/ioc/db/callback.c
index 077f1f3..3a64edb 100644
--- a/src/ioc/db/callback.c
+++ b/src/ioc/db/callback.c
@@ -101,7 +101,7 @@ int callbackSetQueueSize(int size)
         errlogPrintf("Callback system already initialized\n");
         return -1;
     }
-    epicsAtomicSetIntT(&callbackQueueSize, size);
+    callbackQueueSize = size;
     return 0;
 }
 
@@ -111,7 +111,7 @@ int callbackQueueStatus(const int reset, callbackQueueStats *result)
     if (!callbackIsInit) return -1;
     if (result) {
         int prio;
-        result->size = epicsAtomicGetIntT(&callbackQueueSize);
+        result->size = callbackQueueSize;
         for(prio = 0; prio < NUM_CALLBACK_PRIORITIES; prio++) {
             epicsRingPointerId qId = callbackQueue[prio].queue;
             result->numUsed[prio] = epicsRingPointerGetUsed(qId);
@@ -287,7 +287,7 @@ void callbackInit(void)
         epicsThreadId tid;
 
         callbackQueue[i].semWakeUp = epicsEventMustCreate(epicsEventEmpty);
-        callbackQueue[i].queue = epicsRingPointerLockedCreate(epicsAtomicGetIntT(&callbackQueueSize));
+        callbackQueue[i].queue = epicsRingPointerLockedCreate(callbackQueueSize);
         if (callbackQueue[i].queue == 0)
             cantProceed("epicsRingPointerLockedCreate failed for %s\n",
                 threadNamePrefix[i]);
