From: Michael Davidsaver <mdavidsaver@bnl.gov>
Date: Fri, 1 Mar 2013 14:34:53 -0500
Subject: cross mingw doesn't provide _vscprintf

This reverts a change made by Andrew Johnson.
Apparently hosted mingw32 does provide the _vscprintf
symbol.
---
 src/libCom/osi/os/WIN32/osdStdio.c | 19 ++++++++++++++-----
 1 file changed, 14 insertions(+), 5 deletions(-)

diff --git a/src/libCom/osi/os/WIN32/osdStdio.c b/src/libCom/osi/os/WIN32/osdStdio.c
index 8a2d58e..602651f 100644
--- a/src/libCom/osi/os/WIN32/osdStdio.c
+++ b/src/libCom/osi/os/WIN32/osdStdio.c
@@ -11,11 +11,6 @@
 #include <stdio.h>
 #include <stdarg.h>
 
-#ifndef _MSC_VER
-/* Older versions of MinGW omitted this prototype from stdio.h */
-_CRTIMP int __cdecl __MINGW_NOTHROW _vscprintf (const char*, va_list);
-#endif
-
 #define epicsExportSharedSymbols
 #include "epicsStdio.h"
 
@@ -23,12 +18,26 @@ int epicsShareAPI epicsVsnprintf(char *str, size_t len,
     const char *fmt, va_list ap)
 {
     int retval = _vsnprintf(str, len, fmt, ap);
+
+#ifdef _MSC_VER
     int needed = _vscprintf(fmt, ap);
 
     if ((int) len < needed + 1) {
         str[len - 1] = 0;
         return needed;
     }
+#else
+    /* Unfortunately MINGW doesn't provide _vscprintf and their
+     * _vsnprintf follows MS' broken return value semantics.
+     */
+    if (retval == -1) {
+        if (len)
+            str[len - 1] = 0;
+        return len;
+    } else if (retval == (int) len) {
+        str[--retval] = 0;
+    }
+#endif
 
     return retval;
 }
